{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","store/actions/type.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","SignedOutLinks","_","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","ProjectSummary","project","title","authorFirstName","authorLastName","ProjectList","_ref","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","initials","CreateProject","createProject","history","push","profile","authorId","add","objectSpread","createdAt","Date","App","layout_Navbar","path","exact","component","ProjectDetails","Boolean","window","location","hostname","iniState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4d4f3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a href='' onClick={props.signOut}>Log out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>NN</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import { LOGIN_ERROR, LOGIN_SUCCESS, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from './type';\r\n\r\nexport const signIn = credentials => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: LOGIN_SUCCESS });\r\n        }).catch((err) => {\r\n            dispatch( { type: LOGIN_ERROR }, err);\r\n        }); \r\n    }\r\n};\r\n\r\nexport const signOut = _ => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch( { type: SIGNOUT_SUCCESS })\r\n        })\r\n    }\r\n};\r\n\r\nexport const signUp = newUser => {\r\n    // getFirebase authentication service to sign the user up, which generates UID\r\n    // and getFirestore to communicate with the store\r\n    // Firestore User Collection stores more info regarding the user \r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(res => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: SIGNUP_SUCCESS });\r\n        }).catch((err) => {\r\n            dispatch({ type: SIGNUP_ERROR, err });\r\n        });\r\n    };\r\n};","export const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR = 'SIGUP_ERROR';\r\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\r\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = _ => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n    const { auth } = props;\r\n    //uid only appears in firebase once the user is logged in \r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">4th of May</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\n\r\nconst ProjectSummary = props => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\" >\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{props.project.title} </span>\r\n                <p>Posted by {props.project.authorFirstName} {props.project.authorLastName}</p>\r\n                <p className=\"grey-text\">3rd of April</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n      <div className=\"project-list section\">\r\n          {/* only if projects exist, run the following code */}\r\n        { projects && projects.map(project => {\r\n          return (\r\n            <Link to={`/projects/${project.id}`} key={project.id}>\r\n              <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          )\r\n        })}  \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        // route guarding\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n          <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 m6\">\r\n                <ProjectList projects={projects}/>\r\n              </div>\r\n              <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n  });\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetails = props => {\r\n    const { project, auth } = props;\r\n    // route guarding\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>4th of April</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return ( \r\n            <div className=\"container center\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        // projects is being synced with the state and allows access to the projects collection\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);        \r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        // route guarding\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        // route guarding\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} value={this.state.firstName}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} value={this.state.lastName}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            { authError ? <p>authError</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth, \r\n        authError: state.auth.authError  \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: (newUser) => {\r\n            dispatch(signUp(newUser))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        // route guarding\r\n        if (!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.content}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: project => dispatch(createProject(project)) \r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from './type';\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        // makes an async call to the database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: CREATE_PROJECT, project })\r\n        }).then(err => {\r\n            dispatch({ type: CREATE_PROJECT_ERROR, err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n         <Navbar />\n         <Switch>\n           <Route path='/' exact component={Dashboard} />\n           <Route path='/projects/:id' component={ProjectDetails} />\n           <Route path='/signin' component={SignIn} />\n           <Route path='/signup' component={SignUp} />\n           <Route path='/create' component={CreateProject} />\n         </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN_ERROR, LOGIN_SUCCESS, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from '../actions/type';\r\n\r\nconst iniState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = iniState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_ERROR:\r\n            console.log('Login fail');\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case SIGNOUT_SUCCESS:\r\n            console.log('Signout success');\r\n            return state;\r\n        case SIGNUP_SUCCESS:\r\n            console.log('Signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case SIGNUP_ERROR:\r\n            console.log('Signout error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../actions/type';\r\n\r\nconst iniState = {}\r\n\r\nconst projectReducer = (state = iniState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_PROJECT:\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case CREATE_PROJECT_ERROR:\r\n            console.log('error', action.err);\r\n            return state;    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\n// database\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCL9pJgTMCr68NHhnzidxjObhxRKsaWRUs\",\r\n    authDomain: \"net-ninja-marioplan-12c4b.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-12c4b.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-12c4b\",\r\n    storageBucket: \"net-ninja-marioplan-12c4b.appspot.com\",\r\n    messagingSenderId: \"683454135782\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({});\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// provides bindings for firestore database in paticular \nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n//  provides bindings provides to interact with the firebase service as a whole \nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    // compose allows us to add multiple store enchancers\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        // useFirestoreForProfile assigns the profile database to userProfile and stores it in Firestore\n        // this is useful because firebase only contains limited user info\n        // attachAuthIsReady is for authenticating before rendering\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n    )\n);\n\n// attachAuthIsReady enables firebaseAuthIsReady which waits for firebase to figure out we're logged in\n// and then React app figrues out that we're logged in.  Only then renders so that the app doesn't get loaded\n// until the authentication is finished \nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, \n        document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n})\n\n\n\n"],"sourceRoot":""}